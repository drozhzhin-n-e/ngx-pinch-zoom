{"ast":null,"code":"import { innerSubscribe, SimpleInnerSubscriber, SimpleOuterSubscriber } from '../innerSubscribe';\nexport function takeUntil(notifier) {\n  return source => source.lift(new TakeUntilOperator(notifier));\n}\nclass TakeUntilOperator {\n  constructor(notifier) {\n    this.notifier = notifier;\n  }\n  call(subscriber, source) {\n    const takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n    const notifierSubscription = innerSubscribe(this.notifier, new SimpleInnerSubscriber(takeUntilSubscriber));\n    if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n      takeUntilSubscriber.add(notifierSubscription);\n      return source.subscribe(takeUntilSubscriber);\n    }\n    return takeUntilSubscriber;\n  }\n}\nclass TakeUntilSubscriber extends SimpleOuterSubscriber {\n  constructor(destination) {\n    super(destination);\n    this.seenValue = false;\n  }\n  notifyNext() {\n    this.seenValue = true;\n    this.complete();\n  }\n  notifyComplete() {}\n}","map":{"version":3,"names":["innerSubscribe","SimpleInnerSubscriber","SimpleOuterSubscriber","takeUntil","notifier","source","lift","TakeUntilOperator","constructor","call","subscriber","takeUntilSubscriber","TakeUntilSubscriber","notifierSubscription","seenValue","add","subscribe","destination","notifyNext","complete","notifyComplete"],"sources":["C:/MobileApp/ngx-pinch-zoom/node_modules/rxjs/_esm2015/internal/operators/takeUntil.js"],"sourcesContent":["import { innerSubscribe, SimpleInnerSubscriber, SimpleOuterSubscriber } from '../innerSubscribe';\nexport function takeUntil(notifier) {\n    return (source) => source.lift(new TakeUntilOperator(notifier));\n}\nclass TakeUntilOperator {\n    constructor(notifier) {\n        this.notifier = notifier;\n    }\n    call(subscriber, source) {\n        const takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n        const notifierSubscription = innerSubscribe(this.notifier, new SimpleInnerSubscriber(takeUntilSubscriber));\n        if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n            takeUntilSubscriber.add(notifierSubscription);\n            return source.subscribe(takeUntilSubscriber);\n        }\n        return takeUntilSubscriber;\n    }\n}\nclass TakeUntilSubscriber extends SimpleOuterSubscriber {\n    constructor(destination) {\n        super(destination);\n        this.seenValue = false;\n    }\n    notifyNext() {\n        this.seenValue = true;\n        this.complete();\n    }\n    notifyComplete() {\n    }\n}\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,qBAAqB,EAAEC,qBAAqB,QAAQ,mBAAmB;AAChG,OAAO,SAASC,SAAS,CAACC,QAAQ,EAAE;EAChC,OAAQC,MAAM,IAAKA,MAAM,CAACC,IAAI,CAAC,IAAIC,iBAAiB,CAACH,QAAQ,CAAC,CAAC;AACnE;AACA,MAAMG,iBAAiB,CAAC;EACpBC,WAAW,CAACJ,QAAQ,EAAE;IAClB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC5B;EACAK,IAAI,CAACC,UAAU,EAAEL,MAAM,EAAE;IACrB,MAAMM,mBAAmB,GAAG,IAAIC,mBAAmB,CAACF,UAAU,CAAC;IAC/D,MAAMG,oBAAoB,GAAGb,cAAc,CAAC,IAAI,CAACI,QAAQ,EAAE,IAAIH,qBAAqB,CAACU,mBAAmB,CAAC,CAAC;IAC1G,IAAIE,oBAAoB,IAAI,CAACF,mBAAmB,CAACG,SAAS,EAAE;MACxDH,mBAAmB,CAACI,GAAG,CAACF,oBAAoB,CAAC;MAC7C,OAAOR,MAAM,CAACW,SAAS,CAACL,mBAAmB,CAAC;IAChD;IACA,OAAOA,mBAAmB;EAC9B;AACJ;AACA,MAAMC,mBAAmB,SAASV,qBAAqB,CAAC;EACpDM,WAAW,CAACS,WAAW,EAAE;IACrB,KAAK,CAACA,WAAW,CAAC;IAClB,IAAI,CAACH,SAAS,GAAG,KAAK;EAC1B;EACAI,UAAU,GAAG;IACT,IAAI,CAACJ,SAAS,GAAG,IAAI;IACrB,IAAI,CAACK,QAAQ,EAAE;EACnB;EACAC,cAAc,GAAG,CACjB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}